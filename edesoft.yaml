# This AWS SAM template has been generated from your function's 
# configuration. If your function has one or more triggers, note 
# that the AWS resources associated with these triggers aren't fully 
# specified in this template and include placeholder values.Open this template 
# in AWS Application Composer or your favorite IDE and modify 
# it to specify a serverless application with other AWS resources. 
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Specification template describing your function.
Resources:
  edesoft:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 604
      Handler: lambda_function.lambda_handler
      Runtime: python3.11
      Architectures:
        - x86_64
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      EphemeralStorage:
        Size: 512
      FunctionUrlConfig:
        AuthType: NONE
        InvokeMode: BUFFERED
      Layers:
        - arn:aws:lambda:us-east-1:105700114703:layer:pandas:1
        - arn:aws:lambda:us-east-1:336392948345:layer:AWSSDKPandas-Python311:3
        - >-
          arn:aws:lambda:us-east-1:017000801446:layer:AWSLambdaPowertoolsPythonV2:46
        - arn:aws:lambda:us-east-1:105700114703:layer:psyco:1
        - >-
          arn:aws:lambda:us-east-1:027255383542:layer:AWS-AppConfig-Extension:113
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      SnapStart:
        ApplyOn: None
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: >-
                arn:aws:secretsmanager:us-east-1:105700114703:secret:empiricateste-gm6HTQ
            - Sid: SecretsManagerDbCredentialsAccess
              Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
                - secretsmanager:PutResourcePolicy
                - secretsmanager:PutSecretValue
                - secretsmanager:DeleteSecret
                - secretsmanager:DescribeSecret
                - secretsmanager:TagResource
              Resource: arn:aws:secretsmanager:*:*:secret:rds-db-credentials/*
            - Sid: RDSDataServiceAccess
              Effect: Allow
              Action:
                - dbqms:CreateFavoriteQuery
                - dbqms:DescribeFavoriteQueries
                - dbqms:UpdateFavoriteQuery
                - dbqms:DeleteFavoriteQueries
                - dbqms:GetQueryString
                - dbqms:CreateQueryHistory
                - dbqms:DescribeQueryHistory
                - dbqms:UpdateQueryHistory
                - dbqms:DeleteQueryHistory
                - rds-data:ExecuteSql
                - rds-data:ExecuteStatement
                - rds-data:BatchExecuteStatement
                - rds-data:BeginTransaction
                - rds-data:CommitTransaction
                - rds-data:RollbackTransaction
                - secretsmanager:CreateSecret
                - secretsmanager:ListSecrets
                - secretsmanager:GetRandomPassword
                - tag:GetResources
              Resource: '*'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: '*'
            - Effect: Allow
              Action:
                - ec2:AcceptVpcPeeringConnection
                - ec2:AcceptVpcEndpointConnections
                - ec2:AllocateAddress
                - ec2:AssignIpv6Addresses
                - ec2:AssignPrivateIpAddresses
                - ec2:AssociateAddress
                - ec2:AssociateDhcpOptions
                - ec2:AssociateRouteTable
                - ec2:AssociateSubnetCidrBlock
                - ec2:AssociateVpcCidrBlock
                - ec2:AttachClassicLinkVpc
                - ec2:AttachInternetGateway
                - ec2:AttachNetworkInterface
                - ec2:AttachVpnGateway
                - ec2:AuthorizeSecurityGroupEgress
                - ec2:AuthorizeSecurityGroupIngress
                - ec2:CreateCarrierGateway
                - ec2:CreateCustomerGateway
                - ec2:CreateDefaultSubnet
                - ec2:CreateDefaultVpc
                - ec2:CreateDhcpOptions
                - ec2:CreateEgressOnlyInternetGateway
                - ec2:CreateFlowLogs
                - ec2:CreateInternetGateway
                - ec2:CreateLocalGatewayRouteTableVpcAssociation
                - ec2:CreateNatGateway
                - ec2:CreateNetworkAcl
                - ec2:CreateNetworkAclEntry
                - ec2:CreateNetworkInterface
                - ec2:CreateNetworkInterfacePermission
                - ec2:CreateRoute
                - ec2:CreateRouteTable
                - ec2:CreateSecurityGroup
                - ec2:CreateSubnet
                - ec2:CreateTags
                - ec2:CreateVpc
                - ec2:CreateVpcEndpoint
                - ec2:CreateVpcEndpointConnectionNotification
                - ec2:CreateVpcEndpointServiceConfiguration
                - ec2:CreateVpcPeeringConnection
                - ec2:CreateVpnConnection
                - ec2:CreateVpnConnectionRoute
                - ec2:CreateVpnGateway
                - ec2:DeleteCarrierGateway
                - ec2:DeleteCustomerGateway
                - ec2:DeleteDhcpOptions
                - ec2:DeleteEgressOnlyInternetGateway
                - ec2:DeleteFlowLogs
                - ec2:DeleteInternetGateway
                - ec2:DeleteLocalGatewayRouteTableVpcAssociation
                - ec2:DeleteNatGateway
                - ec2:DeleteNetworkAcl
                - ec2:DeleteNetworkAclEntry
                - ec2:DeleteNetworkInterface
                - ec2:DeleteNetworkInterfacePermission
                - ec2:DeleteRoute
                - ec2:DeleteRouteTable
                - ec2:DeleteSecurityGroup
                - ec2:DeleteSubnet
                - ec2:DeleteTags
                - ec2:DeleteVpc
                - ec2:DeleteVpcEndpoints
                - ec2:DeleteVpcEndpointConnectionNotifications
                - ec2:DeleteVpcEndpointServiceConfigurations
                - ec2:DeleteVpcPeeringConnection
                - ec2:DeleteVpnConnection
                - ec2:DeleteVpnConnectionRoute
                - ec2:DeleteVpnGateway
                - ec2:DescribeAccountAttributes
                - ec2:DescribeAddresses
                - ec2:DescribeAvailabilityZones
                - ec2:DescribeCarrierGateways
                - ec2:DescribeClassicLinkInstances
                - ec2:DescribeCustomerGateways
                - ec2:DescribeDhcpOptions
                - ec2:DescribeEgressOnlyInternetGateways
                - ec2:DescribeFlowLogs
                - ec2:DescribeInstances
                - ec2:DescribeInternetGateways
                - ec2:DescribeIpv6Pools
                - ec2:DescribeLocalGatewayRouteTables
                - ec2:DescribeLocalGatewayRouteTableVpcAssociations
                - ec2:DescribeKeyPairs
                - ec2:DescribeMovingAddresses
                - ec2:DescribeNatGateways
                - ec2:DescribeNetworkAcls
                - ec2:DescribeNetworkInterfaceAttribute
                - ec2:DescribeNetworkInterfacePermissions
                - ec2:DescribeNetworkInterfaces
                - ec2:DescribePrefixLists
                - ec2:DescribeRouteTables
                - ec2:DescribeSecurityGroupReferences
                - ec2:DescribeSecurityGroupRules
                - ec2:DescribeSecurityGroups
                - ec2:DescribeStaleSecurityGroups
                - ec2:DescribeSubnets
                - ec2:DescribeTags
                - ec2:DescribeVpcAttribute
                - ec2:DescribeVpcClassicLink
                - ec2:DescribeVpcClassicLinkDnsSupport
                - ec2:DescribeVpcEndpointConnectionNotifications
                - ec2:DescribeVpcEndpointConnections
                - ec2:DescribeVpcEndpoints
                - ec2:DescribeVpcEndpointServiceConfigurations
                - ec2:DescribeVpcEndpointServicePermissions
                - ec2:DescribeVpcEndpointServices
                - ec2:DescribeVpcPeeringConnections
                - ec2:DescribeVpcs
                - ec2:DescribeVpnConnections
                - ec2:DescribeVpnGateways
                - ec2:DetachClassicLinkVpc
                - ec2:DetachInternetGateway
                - ec2:DetachNetworkInterface
                - ec2:DetachVpnGateway
                - ec2:DisableVgwRoutePropagation
                - ec2:DisableVpcClassicLink
                - ec2:DisableVpcClassicLinkDnsSupport
                - ec2:DisassociateAddress
                - ec2:DisassociateRouteTable
                - ec2:DisassociateSubnetCidrBlock
                - ec2:DisassociateVpcCidrBlock
                - ec2:EnableVgwRoutePropagation
                - ec2:EnableVpcClassicLink
                - ec2:EnableVpcClassicLinkDnsSupport
                - ec2:ModifyNetworkInterfaceAttribute
                - ec2:ModifySecurityGroupRules
                - ec2:ModifySubnetAttribute
                - ec2:ModifyVpcAttribute
                - ec2:ModifyVpcEndpoint
                - ec2:ModifyVpcEndpointConnectionNotification
                - ec2:ModifyVpcEndpointServiceConfiguration
                - ec2:ModifyVpcEndpointServicePermissions
                - ec2:ModifyVpcPeeringConnectionOptions
                - ec2:ModifyVpcTenancy
                - ec2:MoveAddressToVpc
                - ec2:RejectVpcEndpointConnections
                - ec2:RejectVpcPeeringConnection
                - ec2:ReleaseAddress
                - ec2:ReplaceNetworkAclAssociation
                - ec2:ReplaceNetworkAclEntry
                - ec2:ReplaceRoute
                - ec2:ReplaceRouteTableAssociation
                - ec2:ResetNetworkInterfaceAttribute
                - ec2:RestoreAddressToClassic
                - ec2:RevokeSecurityGroupEgress
                - ec2:RevokeSecurityGroupIngress
                - ec2:UnassignIpv6Addresses
                - ec2:UnassignPrivateIpAddresses
                - ec2:UpdateSecurityGroupRuleDescriptionsEgress
                - ec2:UpdateSecurityGroupRuleDescriptionsIngress
              Resource: '*'
